(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{690:function(t,a,s){"use strict";s.r(a);var r=s(8),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"算法的复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法的复杂度"}},[t._v("#")]),t._v(" 算法的复杂度")]),t._v(" "),s("h3",{attrs:{id:"时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),s("p",[t._v("算法运行后对时间需求量的定性描述")]),t._v(" "),s("h4",{attrs:{id:"大o表示法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大o表示法"}},[t._v("#")]),t._v(" 大O表示法")]),t._v(" "),s("ul",[s("li",[t._v("算法效率严重依赖于操作（operation）数量")]),t._v(" "),s("li",[t._v("操作数量的估算可以作为时间复杂度的估算")]),t._v(" "),s("li",[t._v("在判断时首先关注操作数量的最高次项")])]),t._v(" "),s("div",{staticClass:"language-math line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("O(5) = O(1)\nO(2n+1) = O(2n) = O(n)\nO(n^2+n+1) = O(n^2)\nO(3n^3+1) = O(3n^3)=O(n^3)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h4",{attrs:{id:"常见的时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的时间复杂度"}},[t._v("#")]),t._v(" 常见的时间复杂度")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//线性阶时间复杂度: O(n)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复杂度为O(1)的程序语句")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环次数: n")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对数阶时间复杂度: O(logn)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复杂度为O(1)的程序语句")]),t._v("\n  i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环次数: log_2^N")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//平方阶时间复杂度: O(n)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//复杂度为O(1)的程序语句")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//循环次数: n2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"算法效率的度量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法效率的度量"}},[t._v("#")]),t._v(" 算法效率的度量")]),t._v(" "),s("p",[t._v("从上到下效率依次递减")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作数量")]),t._v(" "),s("th",[t._v("大O表示法")]),t._v(" "),s("th",[t._v("术语")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("15")]),t._v(" "),s("td",[t._v("O(1)")]),t._v(" "),s("td",[t._v("常数阶")])]),t._v(" "),s("tr",[s("td",[t._v("2log_2(n)")]),t._v(" "),s("td",[t._v("O(log_2(n))")]),t._v(" "),s("td",[t._v("对数阶")])]),t._v(" "),s("tr",[s("td",[t._v("3n+5")]),t._v(" "),s("td",[t._v("O(n)")]),t._v(" "),s("td",[t._v("线性阶")])]),t._v(" "),s("tr",[s("td",[t._v("3nlog_2(n)+4n+2")]),t._v(" "),s("td",[t._v("O(n*logn)")]),t._v(" "),s("td",[t._v("nlogn阶")])]),t._v(" "),s("tr",[s("td",[t._v("3n^2+2n+1")]),t._v(" "),s("td",[t._v("O(n^2)")]),t._v(" "),s("td",[t._v("平方阶")])]),t._v(" "),s("tr",[s("td",[t._v("6n"),s("sup",[t._v("3+n")]),t._v("2+2n+1")]),t._v(" "),s("td",[t._v("O(n^3)")]),t._v(" "),s("td",[t._v("立方阶级")])]),t._v(" "),s("tr",[s("td",[t._v("2^n+1")]),t._v(" "),s("td",[t._v("O(2^n)")]),t._v(" "),s("td",[t._v("指数阶")])]),t._v(" "),s("tr",[s("td",[t._v("n!+4")]),t._v(" "),s("td",[t._v("O(n!)")]),t._v(" "),s("td",[t._v("阶乘阶")])])])]),t._v(" "),s("p",[t._v("O(1) < O(log_2(n)) < O(n) < O(n*logn) < O(n^2) < O(n^3) < O(2^n) < O(n!)")]),t._v(" "),s("h4",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[t._v("时间复杂度是算法运行时对时间的需求量")]),t._v(" "),s("li",[t._v("大O表示法用于描述算法的时间复杂度")]),t._v(" "),s("li",[t._v("大O表示法只关注操作数量的最高次项")]),t._v(" "),s("li",[t._v("常见的时间复杂度为，线性阶、平方阶和对数阶")])]),t._v(" "),s("h3",{attrs:{id:"空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度")]),t._v(" "),s("p",[t._v("算法运行后对空间需求量的定性描述")]),t._v(" "),s("p",[t._v("面试题：当两个算法的大O表示法相同时，是否意味着两个算法的效率完全相同？")]),t._v(" "),s("p",[t._v("当算法的大O表示法相同时，意味着这两个算法的效率是在同一个级别的，但不意味着这两个算法效率完全相同。")]),t._v(" "),s("ul",[s("li",[t._v("一般而言，工程中使用的算法，时间复杂度不超过O(n^3)")]),t._v(" "),s("li",[t._v("算法分析与设计时，重点考虑最坏情况下的时间复杂度")]),t._v(" "),s("li",[t._v("数据结构课程中重点关注算法的时间复杂度")]),t._v(" "),s("li",[t._v("大O表示法同样适用于算法的空间复杂度")]),t._v(" "),s("li",[t._v("空间换时间是工程开发中常用的策略")])]),t._v(" "),s("h2",{attrs:{id:"线性表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表"}},[t._v("#")]),t._v(" 线性表")]),t._v(" "),s("h3",{attrs:{id:"线性表的表现形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的表现形式"}},[t._v("#")]),t._v(" 线性表的表现形式")]),t._v(" "),s("ul",[s("li",[t._v("零个或多个数据元素组成的集合")]),t._v(" "),s("li",[t._v("数据元素在位置上是有序排列的")]),t._v(" "),s("li",[t._v("数据元素的个数是有限的")]),t._v(" "),s("li",[t._v("数据元素的类型必须一样")])]),t._v(" "),s("h3",{attrs:{id:"线性表的抽象定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的抽象定义"}},[t._v("#")]),t._v(" 线性表的抽象定义")]),t._v(" "),s("ul",[s("li",[t._v("线性表是具有相同类型的n(n>=0)个数据元素的有限序列")])]),t._v(" "),s("p",[s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG",display:"true"}},[s("svg",{staticStyle:{"vertical-align":"-0.566ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"17.089ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 7553.4 1000"}},[s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("path",{attrs:{"data-c":"1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(681,0)"}},[s("path",{attrs:{"data-c":"28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(1070,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("path",{attrs:{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}})]),s("g",{attrs:{"data-mml-node":"TeXAtom",transform:"translate(562,-150) scale(0.707)","data-mjx-texclass":"ORD"}},[s("g",{attrs:{"data-mml-node":"mn"}},[s("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})])])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(2035.6,0)"}},[s("path",{attrs:{"data-c":"2C",d:"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(2480.2,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("path",{attrs:{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}})]),s("g",{attrs:{"data-mml-node":"TeXAtom",transform:"translate(562,-150) scale(0.707)","data-mjx-texclass":"ORD"}},[s("g",{attrs:{"data-mml-node":"mn"}},[s("path",{attrs:{"data-c":"32",d:"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"}})])])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(3445.8,0)"}},[s("path",{attrs:{"data-c":"2C",d:"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(3890.4,0)"}},[s("path",{attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4335.1,0)"}},[s("path",{attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(4779.8,0)"}},[s("path",{attrs:{"data-c":"2E",d:"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"}})]),s("g",{attrs:{"data-mml-node":"msub",transform:"translate(5224.4,0)"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("path",{attrs:{"data-c":"1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}})]),s("g",{attrs:{"data-mml-node":"TeXAtom",transform:"translate(562,-150) scale(0.707)","data-mjx-texclass":"ORD"}},[s("g",{attrs:{"data-mml-node":"mi"}},[s("path",{attrs:{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(600,0)"}},[s("path",{attrs:{"data-c":"2212",d:"M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"}})]),s("g",{attrs:{"data-mml-node":"mn",transform:"translate(1378,0)"}},[s("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})])])]),s("g",{attrs:{"data-mml-node":"mo",transform:"translate(7164.4,0)"}},[s("path",{attrs:{"data-c":"29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}})])])])])])],1),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ai是表项(数据元素)，n是表长\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"线性表的性质"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的性质"}},[t._v("#")]),t._v(" 线性表的性质")]),t._v(" "),s("ul",[s("li",[t._v("a0为线性表第一个元素，只有一个后继")]),t._v(" "),s("li",[t._v("a(n-1)为线性表的最后一个元素，只有一个前驱")]),t._v(" "),s("li",[t._v("除了a0、a(n-1)的其他元素ai,既有前驱也有后继")]),t._v(" "),s("li",[t._v("直接支持逐项访问和顺序存取")])]),t._v(" "),s("h3",{attrs:{id:"线性表的常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的常用操作"}},[t._v("#")]),t._v(" 线性表的常用操作")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("操作")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("(增)将元素插入到线性表")]),t._v(" "),s("td",[t._v("bool insert(int position, ElemType value)")])]),t._v(" "),s("tr",[s("td",[t._v("(删)将元素从线性表中删除")]),t._v(" "),s("td",[t._v("bool  remove(int position)")])]),t._v(" "),s("tr",[s("td",[t._v("(改)设置目标位置的元素的值")]),t._v(" "),s("td",[t._v("bool  set(int i, ElemType value)")])]),t._v(" "),s("tr",[s("td",[t._v("(查)获取目标位置的元素的值")]),t._v(" "),s("td",[t._v("bool  get(int i,ElemType value)")])]),t._v(" "),s("tr",[s("td",[t._v("获取线性表的长度")]),t._v(" "),s("td",[t._v("int length()")])]),t._v(" "),s("tr",[s("td",[t._v("清空线性表")]),t._v(" "),s("td",[t._v("bool clear()")])])])]),t._v(" "),s("h3",{attrs:{id:"线性表的抽象的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性表的抽象的实现"}},[t._v("#")]),t._v(" 线性表的抽象的实现")]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("ul",[s("li",[t._v("线性表是数据元素的有序并且有限的集合")]),t._v(" "),s("li",[t._v("线性表中的数据元素必须是相同类型")]),t._v(" "),s("li",[t._v("线性表可用于描述排队关系的问题")]),t._v(" "),s("li",[t._v("线性表在程序中表现是一种特殊的数据类型")]),t._v(" "),s("li",[t._v("线性表在C++中表象为一个抽象类")])]),t._v(" "),s("h2",{attrs:{id:"顺序存储线性表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储线性表"}},[t._v("#")]),t._v(" 顺序存储线性表")]),t._v(" "),s("h3",{attrs:{id:"顺序存储的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储的定义"}},[t._v("#")]),t._v(" 顺序存储的定义")]),t._v(" "),s("p",[t._v("线性表的顺序存储结构指的是用一段连续地址的存储单元一次存储线性表中的数据元素")]),t._v(" "),s("h3",{attrs:{id:"设计思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计思路"}},[t._v("#")]),t._v(" 设计思路")]),t._v(" "),s("h4",{attrs:{id:"静态staticlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态staticlist"}},[t._v("#")]),t._v(" 静态StaticList")]),t._v(" "),s("ul",[s("li",[t._v("使用原生数组作为顺序存储空间")]),t._v(" "),s("li",[t._v("使用模板参数决定数组大小")])]),t._v(" "),s("h4",{attrs:{id:"动态数组dynamiclist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态数组dynamiclist"}},[t._v("#")]),t._v(" 动态数组DynamicList")]),t._v(" "),s("ul",[s("li",[t._v("申请连续堆空间作为顺序存储空间")]),t._v(" "),s("li",[t._v("动态设置顺序存储空间的大小")]),t._v(" "),s("li",[t._v("保证重置顺序存储空间时的异常安全性")])]),t._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h2",{attrs:{id:"栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),s("h3",{attrs:{id:"顺序栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序栈"}},[t._v("#")]),t._v(" 顺序栈")]),t._v(" "),s("h3",{attrs:{id:"共享栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享栈"}},[t._v("#")]),t._v(" 共享栈")]),t._v(" "),s("h3",{attrs:{id:"链栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链栈"}},[t._v("#")]),t._v(" 链栈")]),t._v(" "),s("h2",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("h3",{attrs:{id:"顺序队"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顺序队"}},[t._v("#")]),t._v(" 顺序队")]),t._v(" "),s("h3",{attrs:{id:"循环队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环队列"}},[t._v("#")]),t._v(" 循环队列")]),t._v(" "),s("h3",{attrs:{id:"链队"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链队"}},[t._v("#")]),t._v(" 链队")]),t._v(" "),s("h3",{attrs:{id:"双端队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双端队列"}},[t._v("#")]),t._v(" 双端队列")]),t._v(" "),s("h2",{attrs:{id:"树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[t._v("#")]),t._v(" 树")]),t._v(" "),s("ul",[s("li",[t._v("度")]),t._v(" "),s("li",[t._v("树的度")]),t._v(" "),s("li",[t._v("分支节点")]),t._v(" "),s("li",[t._v("叶子节点")]),t._v(" "),s("li",[t._v("节点层次")]),t._v(" "),s("li",[t._v("节点高度")]),t._v(" "),s("li",[t._v("节点深度")]),t._v(" "),s("li",[t._v("树的高(深)度")]),t._v(" "),s("li",[t._v("有序树")]),t._v(" "),s("li",[t._v("无序树")]),t._v(" "),s("li",[t._v("路径")]),t._v(" "),s("li",[t._v("路径长度")]),t._v(" "),s("li",[t._v("森林")])]),t._v(" "),s("h3",{attrs:{id:"二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),s("h3",{attrs:{id:"满二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#满二叉树"}},[t._v("#")]),t._v(" 满二叉树")]),t._v(" "),s("h3",{attrs:{id:"完全二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完全二叉树"}},[t._v("#")]),t._v(" 完全二叉树")]),t._v(" "),s("h3",{attrs:{id:"二叉排序树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉排序树"}},[t._v("#")]),t._v(" 二叉排序树")]),t._v(" "),s("h3",{attrs:{id:"二叉搜索树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[t._v("#")]),t._v(" 二叉搜索树")]),t._v(" "),s("h3",{attrs:{id:"红黑树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[t._v("#")]),t._v(" 红黑树")]),t._v(" "),s("h3",{attrs:{id:"平衡二叉树-avl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉树-avl"}},[t._v("#")]),t._v(" 平衡二叉树(AVL)")]),t._v(" "),s("h3",{attrs:{id:"b树-b-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b树-b-tree"}},[t._v("#")]),t._v(" B树(B-tree)")]),t._v(" "),s("h3",{attrs:{id:"b-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树"}},[t._v("#")]),t._v(" B+树")]),t._v(" "),s("h3",{attrs:{id:"b-树-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树-2"}},[t._v("#")]),t._v(" B*树")]),t._v(" "),s("h3",{attrs:{id:"哈夫曼树-最优二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈夫曼树-最优二叉树"}},[t._v("#")]),t._v(" 哈夫曼树（最优二叉树）")]),t._v(" "),s("h3",{attrs:{id:"字典树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字典树"}},[t._v("#")]),t._v(" 字典树")]),t._v(" "),s("h3",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆"}},[t._v("#")]),t._v(" 堆")]),t._v(" "),s("h3",{attrs:{id:"并查集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并查集"}},[t._v("#")]),t._v(" 并查集")]),t._v(" "),s("h3",{attrs:{id:"布隆过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),s("h2",{attrs:{id:"图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[t._v("#")]),t._v(" 图")]),t._v(" "),s("h3",{attrs:{id:"无向图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无向图"}},[t._v("#")]),t._v(" 无向图")]),t._v(" "),s("h3",{attrs:{id:"有向图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有向图"}},[t._v("#")]),t._v(" 有向图")]),t._v(" "),s("h3",{attrs:{id:"广度优先搜索算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#广度优先搜索算法"}},[t._v("#")]),t._v(" 广度优先搜索算法")]),t._v(" "),s("h3",{attrs:{id:"深度优先搜索算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深度优先搜索算法"}},[t._v("#")]),t._v(" 深度优先搜索算法")]),t._v(" "),s("h2",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("ul",[s("li",[t._v("插入排序")]),t._v(" "),s("li",[t._v("折半插入排序")]),t._v(" "),s("li",[t._v("希尔排序（缩小增量排序）")]),t._v(" "),s("li",[t._v("交换排序")]),t._v(" "),s("li",[t._v("冒泡排序")]),t._v(" "),s("li",[t._v("快速排序")]),t._v(" "),s("li",[t._v("选择排序")]),t._v(" "),s("li",[t._v("堆排序")]),t._v(" "),s("li",[t._v("拓扑排序")])]),t._v(" "),s("h2",{attrs:{id:"复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.bigocheatsheet.com/#graphs",target:"_blank",rel:"noopener noreferrer"}},[t._v("复杂度"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);